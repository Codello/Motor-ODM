name: CI
on: push

jobs:
  lint:
    name: Lint Code Style
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install Dependencies
        run: pip install .[dev,typing]
      - name: Run Flake8
        run: invoke flake8
      - name: Run isort
        run: invoke isort --check
      - name: Run MyPy
        run: invoke mypy
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all commits up to the last tag to read the correct version number
          fetch-depth: 50
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Run Sphinx
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
          pre-build-command: "apt-get update -y && apt-get install -y git"
          build-command: "make html"
      - name: Upload HTML Docs
        uses: actions/upload-artifact@v1
        with:
          name: HTML Docs
          path: docs/build/html
  build:
    name: Build Package
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # We need to fetch all commits up to the last tag to read the correct version number
          fetch-depth: 50
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U pep517
      - name: Build Package
        run: python -m pep517.build .
        env:
          SKIP_CYTHON: 1
      - name: Upload Artifacts
        uses: actions/upload-artifact@v1
        with:
          name: PyPI Files
          path: dist

  deploy:
    name: Deploy to PyPI
    needs: build
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install Dependencies
        run: pip install twine
      - name: Get Build Artifacts
        uses: actions/download-artifact@v1
        with:
          name: PyPI Files
      - name: Validate Build Artifacts
        run: twine check pypi_files/*
      - name: Upload to PyPI
        run: twine upload --non-interactive pypi_files/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.pypi_token }}
